{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","selected","onYearChange","value","onChange","e","target","ExpenseDate","date","month","toLocaleString","day","year","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","toString","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","htmlFor","type","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","console","log","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92feb481.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\nconst Card = (props) => {\r\n    const classes='card '+props.className\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = ({selected,onYearChange}) => {\r\n\r\n  const yearChangeHandler=(e)=>{\r\n    onYearChange(e.target.value);\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={yearChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\nconst ExpenseDate = ({ date }) => {\r\n\tconst month = date.toLocaleString('en-US', { month: 'long' });\r\n\tconst day = date.toLocaleString('en-US', { day: '2-digit' });\r\n\tconst year = date.toLocaleString('en-US', { year: 'numeric' });\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card'\r\nconst ExpenseItem = ({ title, amount, date }) => {\r\n\treturn (\r\n\t\t<Card className=\"expense-item\">\r\n\t\t\t<ExpenseDate date={date}/>\r\n\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t<div className=\"expense-item__price\">${amount}</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = ({items}) => {\r\n\r\n\tif(items.length===0){\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\r\n    }\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {items.map((expense) => {\r\n                return <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />;\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList\r\n","import React from 'react'\r\nimport './ChartBar.css'\r\nconst ChartBar = ({value,maxValue,label}) => {\r\n    let barFillHeight='0%';\r\n\r\n    if(maxValue>0){\r\n        barFillHeight=Math.round((value/maxValue)*100)+'%';\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar\r\n","import React from 'react'\r\nimport ChartBar from './ChartBar'\r\nimport './Chart.css'\r\nconst Chart = ({dataPoints}) => {\r\n    const dataPointValues=dataPoints.map(dataPoint=>dataPoint.value);\r\n    const totalMaximum=Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {dataPoints.map(dataPoint=>\r\n                <ChartBar\r\n                 key={dataPoint.label} \r\n                 value={dataPoint.value} \r\n                 maxValue={totalMaximum} \r\n                 label={dataPoint.label}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = ({expenses}) => {\r\n    const chartDataPoints=[\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0},\r\n    ];\r\n\r\n    for(const expense of expenses){\r\n        const expenseMonth=expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value +=expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}/>\r\n    )\r\n}\r\n\r\nexport default ExpensesChart\r\n","import React, { useState } from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nconst Expenses = ({ expenses }) => {\r\n\tconst [ filteredYear, setFilteredYear ] = useState('2020');\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\tconst filteredExpenses = expenses.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\r\n\r\n\r\n\treturn (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onYearChange={filterChangeHandler} />\r\n\t  <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </li>\r\n\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nconst ExpenseForm = ({onSaveExpenseData,onCancel}) => {\r\n\tconst [ enteredTitle, setEnteredTitle ] = useState('');\r\n\tconst [ enteredAmount, setEnteredAmount ] = useState('');\r\n\tconst [ enteredDate, setEnteredDate ] = useState('');\r\n\r\n\t/*    const [userInput,setUserInput]=useState({\r\n        enteredTitle:'',\r\n        enteredAmount:'',\r\n        enteredDate:''\r\n    }) */\r\n\r\n\tconst titleChangeHandler = (e) => {\r\n\t\tsetEnteredTitle(e.target.value);\r\n\t\t/*  setUserInput({\r\n            ...userInput,\r\n            enteredTitle:e.target.value\r\n        }) */\r\n\t\t/*  setUserInput((prevState)=>{\r\n            return {...prevState,enteredTitle:e.target.value}\r\n        }); */\r\n\t};\r\n\tconst amountChangeHandler = (e) => {\r\n\t\tsetEnteredAmount(e.target.value);\r\n\t\t/*   setUserInput({\r\n            ...userInput,\r\n            enteredAmount:e.target.value\r\n        }) */\r\n\t};\r\n\tconst dateChangeHandler = (e) => {\r\n\t\tsetEnteredDate(e.target.value);\r\n\t\t/*  setUserInput({\r\n            ...userInput,\r\n            enteredDate:e.target.value\r\n        }) */\r\n\t};\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate)\r\n\t\t};\r\n\r\n\t\t//console.log(expenseData);\r\n        onSaveExpenseData(expenseData);\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        setEnteredTitle('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label htmlFor=\"\">Title</label>\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        onChange={titleChangeHandler} \r\n                        value={enteredTitle}\r\n                    />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label htmlFor=\"\">Amount</label>\r\n\t\t\t\t\t<input \r\n                        type=\"number\" \r\n                        onChange={amountChangeHandler} \r\n                        min=\"0.01\" \r\n                        step=\"0.01\" \r\n                        value={enteredAmount}\r\n                    />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label htmlFor=\"\">Date</label>\r\n\t\t\t\t\t<input \r\n                        type=\"date\" \r\n                        onChange={dateChangeHandler} \r\n                        min=\"2019-01-01\" \r\n                        max=\"2022-12-31\" \r\n                        value={enteredDate}\r\n                    />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t\t<button type=\"button\" onClick={onCancel}>Cancel</button>\r\n\t\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React,{useState} from 'react'\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nimport './NewExpense.css';\r\nconst NewExpense = ({onAddExpense}) => {\r\n    const [isEditing,setIsEditing]=useState(false);\r\n    const saveExpenseDataHandler=(enteredExpenseData)=>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n        onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const startEditingHandler=()=>{\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler=()=>{\r\n        setIsEditing(false);\r\n    }\r\n    return (\r\n        <div className=\"new-expense\">\r\n           {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n           {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense\r\n\r\n","import React,{useState} from 'react'\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES=[\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: 'e2', \n    title: 'New TV',\n    amount: 799.49, \n    date: new Date(2021, 2, 12) \n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses,setExpenses]=useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler=(expense)=>{\n    console.log(expense);\n    setExpenses((prevExpenses)=>{\n      return [...prevExpenses,expense];\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}